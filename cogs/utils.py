import discord
from discord.ext import commands
import json
import os
from collections import defaultdict

# –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∑—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é
STATS_FILE = 'tip_stats.json'

class Utils(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.tip_stats = self.load_stats()

    def load_stats(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ —Ñ–∞–π–ª—É"""
        if os.path.exists(STATS_FILE):
            with open(STATS_FILE, 'r') as f:
                return defaultdict(int, json.load(f))
        return defaultdict(int)

    def save_stats(self):
        """–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É —Ñ–∞–π–ª"""
        with open(STATS_FILE, 'w') as f:
            json.dump(dict(self.tip_stats), f)

    @commands.command(name='hello')
    async def hello(self, ctx):
        """–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º"""
        await ctx.send(f'–ü—Ä–∏–≤—ñ—Ç, {ctx.author.name}! üëã')

    @commands.command(name='ping')
    async def ping(self, ctx):
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∏ –±–æ—Ç–∞"""
        await ctx.send(f'Ping! –ó–∞—Ç—Ä–∏–º–∫–∞: {round(self.bot.latency * 1000)}ms')

    @commands.command(name='tip')
    async def tip(self, ctx, member: discord.Member, *, reason="perfect moment"):
        """–¢—ñ–ø–Ω—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        # –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç—ñ–ø—ñ–≤ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        self.tip_stats[str(member.id)] += 1
        self.save_stats()
        await ctx.send(f'‚ò†Ô∏è {ctx.author.mention} —Ç—ñ–ø–Ω—É–≤ –≥–µ–Ω—ñ—è –Ω–∞ {member.mention} –∑–∞ {reason} ‚ò†Ô∏è')

    @tip.error
    async def tip_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send('‚ùå –í–∫–∞–∂—ñ—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!\n–ü—Ä–∏–∫–ª–∞–¥: !tip @–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏—á–∏–Ω–∞')
        elif isinstance(error, commands.MemberNotFound):
            await ctx.send('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!')

    @commands.command(name='top')
    async def top(self, ctx):
        """–ü–æ–∫–∞–∑—É—î —Ç–æ–ø —Ç—ñ–ø–Ω—É—Ç–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
        if not self.tip_stats:
            await ctx.send("‚ùå –ü–æ–∫–∏ —â–æ –Ω—ñ–∫–æ–≥–æ –Ω–µ —Ç—ñ–ø–Ω—É–ª–∏!")
            return
        
        # –°–æ—Ä—Ç—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Ç—ñ–ø—ñ–≤
        sorted_stats = sorted(self.tip_stats.items(), key=lambda x: int(x[1]), reverse=True)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ç–æ–ø–æ–º
        message = "üèÜ –¢–æ–ø —Ç—ñ–ø–Ω—É—Ç–∏—Ö –≥–µ–Ω—ñ—ó–≤:\n\n"
        shown_users = 0
        
        for user_id, tips in sorted_stats:
            try:
                user = await ctx.guild.fetch_member(int(user_id))
                if user:
                    shown_users += 1
                    message += f"{shown_users}. {user.mention} - {tips} tip{'s' if tips != 1 else ''}\n"
            except discord.NotFound:
                continue
        
        if shown_users == 0:
            await ctx.send("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ç–æ–ø—ñ!")
        else:
            await ctx.send(message)

    @commands.command(name='list')
    async def list_commands(self, ctx):
        """–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥"""
        embed = discord.Embed(
            title="üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞",
            description="–û—Å—å —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥:",
            color=discord.Color.blue()
        )

        commands_list = {
            "üéµ –ú—É–∑–∏–∫–∞": {
                "!music <–ø–æ—Å–∏–ª–∞–Ω–Ω—è>": "–î–æ–¥–∞—Ç–∏ –º—É–∑–∏–∫—É –∑ YouTube –≤ —á–µ—Ä–≥—É",
                "!skip": "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Ç—Ä–µ–∫",
                "!stop": "–ó—É–ø–∏–Ω–∏—Ç–∏ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ –æ—á–∏—Å—Ç–∏—Ç–∏ —á–µ—Ä–≥—É",
                "!queue (!q)": "–ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É —á–µ—Ä–≥—É –º—É–∑–∏–∫–∏"
            },
            "üéÆ –Ü–≥—Ä–∏": {
                "!sales": "–ü–æ–∫–∞–∑–∞—Ç–∏ –∑–Ω–∏–∂–∫–∏ –≤ Steam",
                "!epic": "–ü–æ–∫–∞–∑–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ —ñ–≥—Ä–∏ –≤ Epic Games Store"
            },
            "üë• –ú–æ–¥–µ—Ä–∞—Ü—ñ—è": {
                "!kick @–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á": "–í–∏–≥–Ω–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä—É",
                "!ban @–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á": "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ",
                "!clear <—Ç–∏–ø –∫–∞–Ω–∞–ª—ñ–≤>": "–í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ –∫–∞–Ω–∞–ª–∏ –≤–∫–∞–∑–∞–Ω–æ–≥–æ —Ç–∏–ø—É",
                "!clean [–∫—ñ–ª—å–∫—ñ—Å—Ç—å]": "–í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –ø–æ—Ç–æ—á–Ω–æ–º—É –∫–∞–Ω–∞–ª—ñ"
            },
            "‚ÑπÔ∏è –Ü–Ω—à–µ": {
                "!hello": "–ü—Ä–∏–≤—ñ—Ç–∞—Ç–∏—Å—è –∑ –±–æ—Ç–æ–º",
                "!list": "–ü–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥",
                "!tip @–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á": "–¢—ñ–ø–Ω—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
                "!top": "–ü–æ–∫–∞–∑–∞—Ç–∏ —Ç–æ–ø —Ç—ñ–ø–Ω—É—Ç–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"
            }
        }

        for category, commands in commands_list.items():
            commands_text = ""
            for cmd, desc in commands.items():
                commands_text += f"**{cmd}**\n‚îî {desc}\n"
            embed.add_field(
                name=category,
                value=commands_text,
                inline=False
            )

        embed.set_footer(text="–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–º–∞–Ω–¥–∏ –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º !")
        
        await ctx.send(embed=embed)

async def setup(bot):
    await bot.add_cog(Utils(bot))
